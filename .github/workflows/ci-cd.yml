name: CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest
    env: # Set environment variables for the whole job
      DATABASE: ${{ secrets.DATABASE }}
      REDIS_HOST: ${{ secrets.REDIS_HOST }}
      REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
      REDIS_PORT: ${{ secrets.REDIS_PORT }}
      MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
      MAILJET_SECRET_KEY: ${{ secrets.MAILJET_SECRET_KEY }}
      PORT: ${{ secrets.PORT }}
      HOST_NAME: ${{ secrets.HOST_NAME }}

    steps:
      - uses: actions/checkout@v2

      # Setup Node.js for Backend
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.3.0'

      # Cài đặt phụ thuộc cho Backend
      - name: Install dependencies for backend
        run: |
          cd backend
          yarn install

      # Chạy kiểm thử cho Backend
      - name: Run tests for backend
        run: |
          cd backend
          yarn test

      # Build Backend (nếu có)
      - name: Build backend
        run: |
          cd backend
          yarn build

  build-frontend:
    name: Build and Test Frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # Setup Node.js for Frontend
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      # Cài đặt phụ thuộc cho Frontend
      - name: Install dependencies for frontend
        run: |
          cd frontend
          yarn install

      # Chạy kiểm thử cho Frontend
      - name: Run tests for frontend
        run: |
          cd frontend
          yarn test

      # Build Frontend
      - name: Build frontend
        run: |
          cd frontend
          yarn build

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    env: # Set environment variables for the deploy job
      ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
      SECRET_ACCESS_KEY: ${{ secrets.SECRET_ACCESS_KEY }}
      BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      BUCKET_REGION: ${{ secrets.BUCKET_REGION }}

    steps:
      - name: Deploy application
        run: |
          echo "Implement deployment script here"
          # Implement your deployment script, for example:
          # aws s3 cp your-file s3://${{ env.BUCKET_NAME }} --region ${{ env.BUCKET_REGION }}
